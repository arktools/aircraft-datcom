      SUBROUTINE TOLOG(ALPHA, LANS, IERR)
C
C***  CONVERT AN ALPHANUMERIC STRING INTO A LOGICAL CONSTANT
C
C***  INPUTS
C
C  ALPHA - ALPHANUMERIC STRING (MUST BE INTEGER)
C
C***  OUTPUTS
C
C   LANS - LOGICAL RESULT
C   IERR - ERROR CODE, 0=NO ERROR OR 1=CONSTANT NOT CORRECT TYPE
C
      INTEGER ALPHA,POINT,BLANK
C
      DIMENSION ALPHA(80),LTRUE(4),LFALSE(5)
C
      LOGICAL LANS
C
      DATA LTRUE  / 4HT   ,4HR   ,4HU   ,4HE   /
      DATA LFALSE / 4HF   ,4HA   ,4HL   ,4HS   ,4HE   /
      DATA POINT  / 4H.    /
      DATA BLANK  / 4H     /
C
      IERR=1
      LANS=.FALSE.
C
C***  SKIP LEADING BLANKS
C
      ICOL=1
      CALL SKIPBL(ALPHA, ICOL)
C
      IF(ICOL .LT. 81)GO TO 1000
C
      GO TO 1060
C
C***  FIRST CHARACTER MUST BE POINT
C
 1000 IF(ALPHA(ICOL) .NE. POINT)GO TO 1060
C
C***  LOOK FOR TRUE
C
C ... TEST FOR .T.
C
      IF(ALPHA(ICOL) .EQ. POINT .AND. ALPHA(ICOL+1) .EQ. LTRUE(1)
     1   .AND. ALPHA(ICOL+2) .EQ. POINT)GO TO 1020
C
C ... TEST FOR .TRUE.
C
      IFIR=ICOL+1
      IMAX=IFIR+3
C
      DO 1010 I=IFIR,IMAX
         II=I
         IF(ALPHA(I) .NE. LTRUE(I-IFIR+1))GO TO 1030
 1010 CONTINUE
C
      II=II+1
      IF(ALPHA(II) .NE. POINT)GO TO 1060
C
 1020 LANS=.TRUE.
      IERR=0
C
      GO TO 1060
C
C***  LOOK FOR FALSE
C
C ... TEST FOR .F.
C
 1030 IF(ALPHA(ICOL) .EQ. POINT .AND. ALPHA(ICOL+1) .EQ. LFALSE(1)
     1   .AND. ALPHA(ICOL+2) .EQ. POINT)GO TO 1050
C
C ... TEST FOR .FALSE.
C
      IFIR=ICOL+1
      IMAX=IFIR+4
C
      DO 1040 I=IFIR,IMAX
         II=I
         IF(ALPHA(I) .NE. LFALSE(I-IFIR+1))GO TO 1060
 1040 CONTINUE
C
      II=II+1
      IF(ALPHA(II) .NE. POINT)GO TO 1060
C
 1050 LANS=.FALSE.
      IERR=0
C
 1060 CONTINUE
C
      RETURN
      END
