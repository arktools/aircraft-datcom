      SUBROUTINE NAMER(KAND,IUNIT,NLNAME,LENNLN,VNAME,DVNAME,LENVN,
     1                 NUMVN,VDIME,COMBLK,MAXCOM,LOC,IEOF)
C
C***  SIMULATE NAMELIST INPUT.  THE FILE ON IUNIT IS READ UNTIL THE
C***  NAMELIST DEFINED IN NLNAME IS FOUND.  IF FOUND, IT IS READ AND
C***  THE CONSTANTS ASSOCIATED WITH EACH VARIABLE ARE SET INTO THE
C***  ARRAY COMBLK.  IUNIT IS NOT REWOUND BEFORE OR AFTER EXECUTION.
C***  ALL ERROR MESSAGES ARE PRINTED TO UNIT IO (SET TO 6).
C
C   KAND - NAMELIST DELIMITER ($ ON CDC AND VAX, & ON IBM AND OTHER)
C          (BUT CAN BE SPECIFIED TO BE ANY UNIQUE CHARACTER)
C  IUNIT - TAPE UNIT FOR READING
C NLNAME - NAMELIST NAME TO FIND AND READ
C LENNLN - NUMBER OF CHARACTERS IN NAMELIST NAME (DIMENSION OF NLNAME)
C  VNAME - VARIABLE NAMES FOR THIS NAMELIST (AN ARRAY)
C DVNAME - DIMENSION OF VNAME ARRAY
C  LENVN - ARRAY WHICH DEFINES THE NUMBER OF CHARACTERS IN EACH
C          VARIABLE NAME
C  NUMVN - NUMBER OF VARIABLE NAMES DEFINED
C  VDIME - NUMBER OF CONSTANTS PERMITTED FOR EACH VARIABLE
C          (DIMENSION OF EACH VARIABLE; USE NEGATIVE FOR LOGICAL
C           VARIABLES)
C COMBLK - STARTING LOCATION FOR STORING INPUTS
C          (USUALLY THE FIRST LOCATION OF A COMMON BLOCK)
C MAXCOM - MAXIMUM DIMENSION OF STORAGE ARRAY
C          (USUALLY THE LENGTH OF THE COMMON BLOCK)
C    LOC - POINTER TO STORAGE ARRAY FOR THE STARTING LOCATION
C          OF EACH INPUT VARIABLE (IF ZERO THE CONSTANT IS NOT STORED)
C   IEOF - .TRUE. IF AN END-OF-FILE WAS DETECTED DURING READ
C
C***  NOTES -
C
C***  ALL INPUT STRING ARRAYS MUST BE DECLARED INTEGER
C
C***  ALL VARIABLES ARE ASSUMMED TO BE REAL; IF VDIME IS NEGATIVE
C***  THE VARIABLE IS ASSUMMED TO BE LOGICAL.  ALTHOUGH THE CODE IS
C***  DESIGNED TO HANDLE INTEGERS AS WELL, THIS OPTION IS NOT
C***  CURRENTLY USED.  IT CAN BE ACTIVATED BY PASSING ANOTHER ARRAY,
C***  VTYPE, TO DEFINE THE TYPE OF VARIABLE, WITH THE CODE
C***  0=LOGICAL, 1=INTEGER, OR 2=REAL; THEN REPLACE THE NAME VTYPE
C***  WITH THE NAME VTYPE(NVN) IN THE REMAINING CODE.
C
C***  THIS ROUTINE CAN BE USED AS A NAMELIST ERROR CHECKER BY SETTING
C***  THE ARRAY LOC TO ALL ZEROS.  THE VARIABELS AND CONSTANTS WILL
C***  BE READ, BUT THE CONSTANTS NOT STORED.
C
      INTEGER EQUAL,COMMA,BLANK,VNAME,DVNAME,VTYPE,VDIME,PARL,PARR,
     1        CARET
C
      LOGICAL IEOF,LANS,SEARCH,FOUND,IEND
C
      DIMENSION NLNAME(LENNLN),VNAME(DVNAME),LENVN(NUMVN),
     1          VDIME(NUMVN),COMBLK(MAXCOM),LOC(NUMVN)
      DIMENSION INUMS(13),KOL(80),INAME(80),IDIM(80),INLN(80),
     1          ICONST(80),KERR(80)
C
      DATA BLANK / 4H     /
      DATA EQUAL / 4H=    /
      DATA COMMA / 4H,    /
      DATA PARL  / 4H(    /
      DATA PARR  / 4H)    /
      DATA CARET / 4H   /
      DATA INUMS / 4H0   ,4H1   ,4H2   ,4H3   ,4H4   ,4H5   ,4H6   ,
     1             4H7   ,4H8   ,4H9   ,4H+   ,4H-   ,4H.   /
      DATA IO    / 6 /
C
C******************************************************************
C***  STAGE 1 - READ CARD AND CHECK FOR KAND AS FIRST CHARACTER ***
C******************************************************************
C
 1000 IEND=.FALSE.
      DO 1010 I=1,80
         INLN(I)=BLANK
         KERR(I)=BLANK
 1010 CONTINUE
C
C***  READ CARD FROM IUNIT
C
 1020 CALL READCD(IUNIT, KOL, IEOF)
      IF(IEOF)GO TO 1290
C
C***  SKIP LEADING BLANKS
C
      ICOL=1
      CALL SKIPBL(KOL, ICOL)
      IF(ICOL .GT. 80)GO TO 1020
C
C***  LOOK FOR KAND FIRST, ELSE READ NEXT CARD
C
      IF(KOL(ICOL) .NE. KAND)GO TO 1020
C
C********************************************************
C***  STAGE 2 - CHECK IF NAMELIST READ IS ONE DESIRED ***
C********************************************************
C
C ... EXTRACT NAMELIST NAME TO BLANK
C
      ICOL=ICOL+1
      LCOL=ICOL
      IECOL=ICOL
      CALL FINDCH(KOL, BLANK, LCOL)
      IF(LCOL .EQ. ICOL)GO TO 1040
C
      CALL EXTRST(KOL, ICOL, LCOL-1, INLN)
C
C ... CHECK FOR NAME MATCH
C
      DO 1030 I=1,LENNLN
         IF(INLN(I) .NE. NLNAME(I))GO TO 1050
 1030 CONTINUE
      ICOL=LCOL
      GO TO 1060
C
C***  KAND FOUND BUT NO NAMELIST NAME FOUND
C
 1040 CONTINUE
C
      WRITE(IO,1310)(KOL(I),I=1,80)
      KERR(IECOL)=CARET
      WRITE(IO,1410)(KERR(I),I=1,80)
      GO TO 1300
C
C***  NAMELIST NAME DESIRED NOT FOUND, READ UNTIL KAND SEEN AGAIN
C***  (SKIP UNTIL END OF THIS NAMELIST INPUT)
C
 1050 CALL FINDCH(KOL, KAND, ICOL)
      IF(ICOL .LE. 80)GO TO 1000
C
C ... READ CARD FROM IUNIT
C
      CALL READCD(IUNIT, KOL, IEOF)
      IF(IEOF)GO TO 1290
      ICOL=1
      GO TO 1050
C
C****************************************
C***  STAGE 3 - EXTRACT VARIABLE NAME ***
C****************************************
C
 1060 SEARCH=.TRUE.
      IOFF=0
C
      DO 1070 I=1,80
         INAME(I)=BLANK
         IDIM(I)=BLANK
         KERR(I)=BLANK
 1070 CONTINUE
C
C ... SKIP BLANKS
C
      CALL SKIPBL(KOL, ICOL)
C
      IF(ICOL .LT. 81)GO TO 1080
C
C ... READ CARD FROM IUNIT
C
      CALL READCD(IUNIT, KOL, IEOF)
      IF(IEOF)GO TO 1290
      ICOL=1
C
      CALL SKIPBL(KOL, ICOL)
C
 1080 IF(KOL(ICOL) .EQ. KAND .OR. IEND)GO TO 1290
C
C ... EXTRACT TO =
C
      LCOL=ICOL
      IECOL=ICOL
      CALL FINDCH(KOL, EQUAL, LCOL)
C
      IF(LCOL .LT. 81)GO TO 1090
C
         WRITE(IO,1320)(KOL(I),I=1,80)
         KERR(IECOL)=CARET
         WRITE(IO,1410)(KERR(I),I=1,80)
         GO TO 1300
C
 1090 KNAME=ICOL
      IECOL=KNAME
      CALL EXTRST(KOL, ICOL, LCOL-1, INAME)
C
C ... LOOK FOR ( IN VARIABLE STRING
C
      KK=1
      CALL FINDCH(INAME, PARL, KK)
      IF(KK .GT. 80)GO TO 1130
C
C ... HAVE SUBSCRIPT DEFINED, NOW LOOK FOR )
C
      LL=KK
      CALL FINDCH(INAME, PARR, LL)
C
      IF(LL .LT. 81)GO TO 1100
C
         WRITE(IO,1330)(KOL(I),I=1,80)
         KERR(IECOL)=CARET
         WRITE(IO,1410)(KERR(I),I=1,80)
         GO TO 1300
C
C ... EXTRACT SUBSCRIPT (OFFSET)
C
 1100 CALL EXTRST(INAME, KK+1, LL-1, IDIM)
      KSUB=KNAME+KK
      IECOL=KSUB
C
C ... BLANK ( TO ) IN VARIABLE NAME
C
      DO 1110 I=KK,LL
         INAME(I)=BLANK
 1110 CONTINUE
C
C ... CONVERT OFFSET
C
      CALL TOINT(IDIM, IOFF, IERR)
C
C ... CHECK IF SUBSCRIPT VALID
C
      IF(.NOT.(IERR .NE. 0 .OR. IOFF .LT. 1))GO TO 1120
C
      WRITE(IO,1370)(KOL(I),I=1,80)
      KERR(IECOL)=CARET
      WRITE(IO,1410)(KERR(I),I=1,80)
      GO TO 1300
C
 1120 IOFF=IOFF-1
C
 1130 CONTINUE
C
      ICOL=LCOL+1
C
 1140 IF(KOL(ICOL) .EQ. KAND)IEND=.TRUE.
C
      DO 1150 I=1,80
         ICONST(I)=BLANK
 1150 CONTINUE
C
C***********************************
C***  STAGE 4 - EXTRACT CONSTANT ***
C***********************************
C
C ... EXTRACT TO COMMA OR KAND
C
      LCOL=ICOL
      KCONS=ICOL
      IECOL=KCONS
      CALL FINDCH(KOL, COMMA, LCOL)
C
      IF(LCOL .LT. 81)GO TO 1160
C
C ... COMMA NOT THERE, SEARCH FOR KAND
C
         LCOL=ICOL
         CALL FINDCH(KOL, KAND, LCOL)
C
         IF(LCOL .LT. 81)IEND=.TRUE.
         IF(LCOL .LT. 81)GO TO 1160
C
C ...    NEITHER COMMA NOR KAND, ASSUME COMMA
C
C           CALL FINDCH(KOL, BLANK, IECOL)
C           WRITE(IO,1340)KAND,(KOL(I),I=1,80)
C           KERR(IECOL)=CARET
C           WRITE(IO,1410)(KERR(I),I=1,80)
C
 1160 CALL EXTRST(KOL, ICOL, LCOL-1, ICONST)
C
C ... EXTRACT REPEAT COUNT SPECIFIED IN CONSTANT
C
      IECOL=KCONS
      CALL REPTCT(ICONST, IREPT, IERR)
C
      IF(IERR .EQ. 0 .AND. IREPT .GT. 0)GO TO 1170
C
      WRITE(IO,1390)(KOL(I),I=1,80)
      KERR(IECOL)=CARET
      WRITE(IO,1410)(KERR(I),I=1,80)
      GO TO 1300
C
 1170 ICOL=LCOL+1
C
C*************************************
C***  STAGE 5 - FIND VARIABLE NAME ***
C*************************************
C
C ... SEARCH FOR VARIABLE NAME IN VNAME ARRAY
C
      IECOL=KNAME
      IF(SEARCH)CALL FINDVN(NUMVN, LENVN, INAME, VNAME, DVNAME, NVN,
     1 FOUND)
C
      IF(.NOT.(SEARCH .AND. .NOT. FOUND))GO TO 1180
C
      WRITE(IO,1350)(KOL(I),I=1,80)
      KERR(IECOL)=CARET
      WRITE(IO,1410)(KERR(I),I=1,80)
      GO TO 1300
C
C ... CHECK VARIABLE DIMENSION LIMIT
C
 1180 IECOL=KCONS
C
      IF(.NOT.((IOFF+1) .GT. IABS(VDIME(NVN))))GO TO 1190
C
      WRITE(IO,1370)(KOL(I),I=1,80)
      KERR(IECOL)=CARET
      WRITE(IO,1410)(KERR(I),I=1,80)
      GO TO 1300
C
 1190 LANS=.FALSE.
      IANS=0
      ANS=0.
C
C**************************************
C***  STAGE 6 - SUBSTITUTE CONSTANT ***
C**************************************
C
C ... CONVERT CONSTANT DEPENDING ON TYPE
C
      IECOL=KCONS
C
C ... A NEGATIVE DIMENSION MEANS LOGICAL
C ... ELSE VARIABLE TYPE IS REAL
C
      IF(VDIME(NVN) .LT. 0)VTYPE=0
      IF(VDIME(NVN) .GT. 0)VTYPE=2
C
      IF(VTYPE .EQ. 0)CALL TOLOG(ICONST, LANS, IERR)
      IF(VTYPE .EQ. 1)CALL TOINT(ICONST, IANS, IERR)
      IF(VTYPE .EQ. 2)CALL TODEC(ICONST,  ANS, IERR)
C
      IF(IERR .EQ. 0)GO TO 1220
C
      IF(VTYPE .EQ. 1)GO TO 1200
C
         WRITE(IO,1390)(KOL(I),I=1,80)
         KERR(IECOL)=CARET
         WRITE(IO,1410)(KERR(I),I=1,80)
         GO TO 1300
C
 1200 IF(IERR .EQ. 1 .AND. VTYPE .NE. 1)GO TO 1210
C
         WRITE(IO,1390)(KOL(I),I=1,80)
         KERR(IECOL)=CARET
         WRITE(IO,1410)(KERR(I),I=1,80)
         GO TO 1300
C
 1210 IF(IERR .EQ. 2 .AND. VTYPE .NE. 1)GO TO 1220
C
C        WRITE(IO,1400)(KOL(I),I=1,80)
C        KERR(IECOL)=CARET
C        WRITE(IO,1410)(KERR(I),I=1,80)
C
C ... SUBSTITUTE CONSTANT
C
 1220 DO 1250 I=1,IREPT
C
C ...    CHECK VARIABLE DIMENSION LIMIT
C
         IF((I+IOFF) .LE. IABS(VDIME(NVN)))GO TO 1230
C
            IECOL=KCONS
            WRITE(IO,1380)(KOL(J),J=1,80)
            KERR(IECOL)=CARET
            WRITE(IO,1410)(KERR(J),J=1,80)
            GO TO 1300
C
 1230    IF(LOC(NVN) .LT. 1)GO TO 1250
         II=LOC(NVN)+I+IOFF-1
C
C ...    CHECK DATA BLOCK SIZE LIMIT
C
         IF(II .LE. MAXCOM)GO TO 1240
C
            WRITE(IO,1360)(KOL(J),J=1,80)
            KERR(IECOL)=CARET
            WRITE(IO,1410)(KERR(J),J=1,80)
            GO TO 1300
C
C ...    SUBSTITUTE CONSTANT DEPENDING ON TYPE
C
 1240    IF(VTYPE .EQ. 0)CALL SUBLOG(COMBLK(II), LANS)
         IF(VTYPE .EQ. 1)CALL SUBINT(COMBLK(II), IANS)
         IF(VTYPE .EQ. 2)CALL SUBREA(COMBLK(II),  ANS)
C
 1250 CONTINUE
C
C ... UPDATE OFFSET IN CASE NEXT INPUT IS A CONSTANT INSTEAD OF A
C ... VARIABLE NAME
C
      IOFF=IOFF+IREPT
C
C ... CHECK IF NEXT INPUT IS A NUMERIC OR LOGICAL
C
      CALL SKIPBL(KOL, ICOL)
C
C ... IF KAND PREVIOUSLY DETECTED, EXIT
C
      IF(IEND)GO TO 1290
C
      IF(ICOL .LT. 81)GO TO 1260
C
C ... READ NEXT CARD
C
      CALL READCD(IUNIT, KOL, IEOF)
      IF(IEOF)GO TO 1290
      ICOL=1
C
      CALL SKIPBL(KOL, ICOL)
C
C ... CHECK IF NEXT NON-BLANK CHARACTER SPECIFIES A NUMERIC OR
C ... LOGICAL INPUT
C
 1260 DO 1270 I=1,13
         IF(KOL(ICOL) .EQ. INUMS(I))GO TO 1280
 1270 CONTINUE
C
C ... NO, SEARCH FOR NEXT VARIABLE NAME INPUT
C
      IERR=0
      GO TO 1060
C
C ... YES, SEARCH FOR NEXT INPUT CONSTANT
C
 1280 SEARCH=.FALSE.
      IERR=0
      GO TO 1140
C
 1290 CONTINUE
C
      RETURN
C
 1300 WRITE(IO,1420)
      STOP
C
 1310 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 51H  ILLEGAL/INCORRECT SPECIFICATION OF NAMELIST NAME.,
     2 /,1X,80A1)
 1320 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 36H  NO EQUALS FOLLOWING VARIABLE NAME.,/,1X,80A1)
 1330 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 51H  NO CLOSING RIGHT PARENTHESIS IN ARRAY DEFINITION.,
     2 /,1X,80A1)
C1340 FORMAT(26H0*** NAMELIST INPUT ERROR.,
C    1 26H  NO TERMINATING COMMA OR ,A1,16H AFTER CONSTANT.,
C    2 27H  A COMMA HAS BEEN ASSUMED.,/,1X,80A1)
 1350 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 32H  VARIABLE NAME NOT IN NAMELIST.,/,1X,80A1)
 1360 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 57H  ARRAY SUBSCRIPT OR NUMBER OF CONSTANTS EXCEEDS VARIABLE,
     2 32H DIMENSION OR COMMON BLOCK SIZE.,/,1X,80A1)
 1370 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 34H  ILLEGAL/INVALID ARRAY SUBSCRIPT.,/,1X,80A1)
 1380 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 48H  REPEAT COUNT EXCEEDS VARIABLE ARRAY DIMENSION.,/,1X,80A1)
 1390 FORMAT(26H0*** NAMELIST INPUT ERROR.,
     1 49H  CONSTANT DOES NOT MATCH TYPE OF INPUT REQUIRED.,/,1X,80A1)
C1400 FORMAT(26H0*** NAMELIST INPUT ERROR.,
C    1 47H  REAL NUMBER SPECIFIED FOR INTEGER, CONVERTED.,/,1X,80A1)
 1410 FORMAT(1X,80A1)
 1420 FORMAT(49H0*** EXECUTION TERMINATING DUE TO NAMELIST ERROR.)
C
      END
